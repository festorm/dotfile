
# TODO set leader to ctrl+space?

# inspiration
# - https://leanpub.com/the-tao-of-tmux/read
# - https://github.com/tony/tmux-config/blob/master/.tmux.conf
# - http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# - https://github.com/gpakosz/.tmux

# Notes
# ? list shortcuts
# d detach from session
# $ rename session
# , rename window

# c           new window
# w           list windows
# f           find window
# &           kill window
# .           move window - prompted for a new number
# :movew<CR>  move window to the next unused number

# o  swap panes
# x  kill pane
# ‚çΩ  space - toggle between layouts


# z           zoom to pane

# Synchrinoze panes
# :setw synchronize-panes

# copy and paste from terminal
# Copy the text: select the text and press mouse left-button with shift key press too.
# Paste the text with shift key + middle-button

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# utf8 support
set-window-option -g utf8 on

# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

# automatically renumber tmux windows
set -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename off

# No delay for escape key press
set -sg escape-time 0

# split panes using | and -
bind-key s split-window -h -c "#{pane_current_path}"
bind-key v split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# usage: resize-pane [-DLRUZ] [-x width] [-y height] [-t target-pane] [adjustment]
# TODO add auto adjust when selecting pane
# ei. resize-pane -D 10 -U 10
# e.g.

# Use Alt-vim keys without prefix key to switch panes
bind -n S-Up    select-pane -U
bind -n S-Down  select-pane -D
bind -n S-Left  select-pane -L
bind -n S-Right select-pane -R

# resize
bind -r S-Up resize-pane -U 5
bind -r S-Down resize-pane -D 5
bind -r S-Left resize-pane -L 5
bind -r S-Right resize-pane -R 5

# Move to window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Window/pane surgery
# TODO
# :joinp -s :2<CR>  move window 2 into a new pane in the current window
# :joinp -t :1<CR>  move the current pane into a new pane in window 1

# Moving tmux pane to window
# TODO
# http://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window

# Reorder windows
# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key C-S-Left swap-window -t -1
bind-key C-S-Right swap-window -t +1

# bind fast session switching
unbind S
bind S command-prompt "switch -t %1"

# Synchronize panes
# e.i. write the same command in all windows
bind = set -g synchronize-panes

# for some reason this needs to be set again?!
bind d detach

# bind-key -n C-Tab next-window
# bind-key -n C-S-Tab previous-window

# write in all panes at once
bind x set-window-option synchronize-panes

# kill current window
bind-key q confirm kill-window

# kill current pane
bind-key -n C-q confirm kill-pane

# fixing alt keys
set -g default-terminal "xterm-256color"
set-window-option -g xterm-keys on  # to make ctrl-arrow, etc. work
set-option -g lock-command vlock

# Make mouse useful in copy mode
#setw -g mode-mouse on

# Allow mouse to select which pane to use
#set -g mouse-select-pane on

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Start numbering at 1
set -g base-index 1

# set global r-o-e so that initial window of initial session gets it
set -g set-remain-on-exit on




######################
### DESIGN CHANGES ###
######################
######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-fg black
set -g pane-active-border-fg brightred

## Status bar design
# status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# }
# The panes {

set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# }
# The messages {

set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

# }
## panes
#set -g pane-border-fg black
#set -g pane-active-border-fg brightred
#
### Status bar design
## status line
#set -g status-utf8 on
#set -g status-justify left
#set -g status-bg default
#set -g status-fg colour12
#set -g status-interval 2
#
## messaging
#set -g message-fg black
#set -g message-bg yellow
#set -g message-command-fg blue
#set -g message-command-bg black
#
##window mode
#setw -g mode-bg colour6
#setw -g mode-fg colour0
#
## window status
#setw -g window-status-format " #F#I:#W#F "
#setw -g window-status-current-format " #F#I:#W#F "
#setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
#setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
#setw -g window-status-current-bg colour0
#setw -g window-status-current-fg colour11
#setw -g window-status-current-attr dim
#setw -g window-status-bg green
#setw -g window-status-fg black
#setw -g window-status-attr reverse
#
## Info on left (I don't have a session display for now)
#set -g status-left ''
#
## loud or quiet?
#set-option -g visual-activity off
#set-option -g visual-bell off
#set-option -g visual-silence off
#set-window-option -g monitor-activity off
#set-option -g bell-action none
#
## The modes {
#setw -g clock-mode-colour colour135
#setw -g mode-attr bold
#setw -g mode-fg colour196
#setw -g mode-bg colour238
#
## }
## The panes {
#
#set -g pane-border-bg colour233
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour233
#set -g pane-active-border-fg blue
#
## }
## The statusbar {
#
#set -g status-position bottom
#set -g status-bg colour234
#set -g status-fg colour137
#set -g status-attr dim
#set -g status-left ''
#set -g status-right '#[fg=colour100,bg=colour130,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
#set -g status-right-length 50
#set -g status-left-length 20
#
#setw -g window-status-current-fg colour81
#setw -g window-status-current-bg blue
#setw -g window-status-current-attr none
#setw -g window-status-current-format ' #I#[fg=colour250] #[fg=colour255]#W#[fg=colour50]#F '
#
#setw -g window-status-fg colour138
#setw -g window-status-bg colour235
#setw -g window-status-attr none
#setw -g window-status-format ' #I#[fg=colour237] #[fg=colour250]#W#[fg=colour244]#F '
#
#setw -g window-status-bell-attr bold
#setw -g window-status-bell-fg colour255
#setw -g window-status-bell-bg colour1
#
## }
## The messages {
#
#set -g message-attr none
#set -g message-fg white
#set -g message-bg blue
#
## }
#
# Disable clock and date
set -g status-right '#[bg=grey]#[fg=blue] #S #H '
#
# another color for another host
if '[ `hostname -s` = sunray ]' \
    "set -g status-right '#[bg=grey]#[fg=red] #S #H ' "
if '[ `hostname -s` = fe ]' \
    "set -g status-right '#[bg=grey]#[fg=purple] #S #H ' "
if '[ `hostname -s` = steno ]' \
    "set -g status-right '#[bg=grey]#[fg=green] #S #H ' "




# Plugins
# https://github.com/tmux-plugins/tpm
#
# Installing plugins
#
#     Add new plugin to ~/.tmux.conf with set -g @plugin '...'
#     Press prefix + I (capital I, as in Install) to fetch the plugin.
#
# You're good to go! The plugin was cloned to ~/.tmux/plugins/ dir and sourced.
# Uninstalling plugins
#
#     Remove (or comment out) plugin from the list.
#     Press prefix + alt + u (lowercase u as in uninstall) to remove the plugin.
#
# All the plugins are installed to ~/.tmux/plugins/ so alternatively you can find plugin directory there and remove it.
# Key bindings
#
# prefix + I
#
#     Installs new plugins from GitHub or any other git repository
#     Refreshes TMUX environment
#
# prefix + U
#
#     updates plugin(s)
#
# prefix + alt + u
#
#     remove/uninstall plugins not on the plugin list
#

# setup
set -g @plugin 'tmux-plugins/tpm'



# copy cat at some point for using tmux all the time
# https://github.com/tmux-plugins/tmux-copycat
#
# Search
#
# prefix + / - regex search (strings work too)
# Example search entries:
#
# foo - searches for string foo
# [0-9]+ - regex search for numbers
# Grep is used for searching.
# Searches are case insensitive.
#
# Predefined searches
#
# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)
# prefix + alt-h - jumping over SHA-1 hashes (best used after git log command)
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + ctrl-d - number search (mnemonic d, as digit)
# prefix + alt-i - ip address search
# These start "copycat mode" and jump to first match.
#
# "Copycat mode" bindings
#
# These are enabled when you search with copycat:
#
# n - jumps to the next match
# N - jumps to the previous match
# To copy a highlighted match:
#
# Enter - if you're using Tmux vi mode
# ctrl-w or alt-w - if you're using Tmux emacs mode
# Copying a highlighted match will take you "out" of copycat mode. Paste with prefix + ] (this is Tmux default paste).
set -g @plugin 'tmux-plugins/tmux-copycat'


# prefix + y - copies text from the command line to clipboard.
# Works with all popular shells/repls. Tested with:
#
# shells: bash, zsh (with bindkey -e), tcsh
# repls: irb, pry, node, psql, python, php -a, coffee
# remote shells: ssh, mosh
# vim/neovim command line (requires vim-husk or vim-rsi plugin)
# prefix + Y (shift-y) - copy pane current working directory to clipboard.
#
# copy mode bindings:
#
# y - copy selection to system clipboard
# Y (shift-y) - "put" selection - equivalent to copying a selection, and pasting it to the command line
# Alt-y - performs both of the above: copy to system clipboard and put to command line (deprecated, not useful)
set -g @plugin 'tmux-plugins/tmux-yank'



# a-z: yank a highlighted hint.
# <space>: toggle compact hints ( see @fingers-compact-hints  ).
# <Ctrl-C>: exit [fingers] mode
# <esc>: exit help or [fingers] mode
# ?: show help.
#set -g @plugin 'Morantron/tmux-fingers'
#set -g @fingers-compact-hints 1

# tmux ressurect, no reason not to have it
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-bash-history 'off' # experimental # note: didn't like dirty terminals
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-save 'C-s'
set -g @resurrect-restore 'C-r'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '60'
set -g @continuum-restore 'on'

#o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
#Ctrl-o - open a highlighted selection with the $EDITOR
#Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
set -g @plugin 'tmux-plugins/tmux-open'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

